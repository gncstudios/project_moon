{"metadata":{"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}},"usedHelpers":[]},"ignored":false,"code":"var _this = this;\n\nTemplate.login.onCreated(function () {\n  _this.badFormResponse = new ReactiveVar(undefined);\n});\nvar that = this;\n\nTemplate.login.events({\n  'keydown #loginForm input': function (event) {\n    that.badFormResponse.set(undefined);\n  },\n  'submit #loginForm': function (event) {\n    event.preventDefault();\n\n    var email = event.target.email.value;\n    var password = event.target.password.value;\n    var rawFormData = event.target;\n    Meteor.loginWithPassword(email, password, function (err) {\n      if (err) {\n        that.badFormResponse.set(\"Invalid username or password.\");\n        // The user might not have been found, or their passwword\n        // could be incorrect. Inform the user that their\n        // login attempt has failed.\n      } else {\n          Router.go(\"/profile\");\n        }\n    });\n  }\n});\n\nTemplate.login.helpers({\n  formClass: function () {\n    return _this.badFormResponse.get() ? \"has-error\" : \"\";\n  },\n  badFormResponse: function () {\n    return _this.badFormResponse.get();\n  }\n});","ast":null,"map":{"version":3,"sources":["/client/templates/login/login.js"],"names":[],"mappings":";;AACA,QAAQ,CAAC,KAAK,CAAC,SAAS,CAAC,YAAM;AAC7B,QAAK,eAAe,GAAG,IAAI,WAAW,CAAC,SAAS,CAAC,CAAC;CACnD,CAAC,CAAC;AACC,IAAI,IAAI,GAAG,IAAI,CAAC;;AAEpB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC;AACpB,4BAA0B,EAAE,UAAS,KAAK,EAAE;AAC1C,QAAI,CAAC,eAAe,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;GACrC;AACD,qBAAmB,EAAE,UAAS,KAAK,EAAE;AACnC,SAAK,CAAC,cAAc,EAAE,CAAC;;AAEvB,QAAI,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;AACrC,QAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC3C,QAAI,WAAW,GAAG,KAAK,CAAC,MAAM,CAAC;AAC/B,UAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,UAAC,GAAG,EAAK;AACjD,UAAI,GAAG,EAAE;AACP,YAAI,CAAC,eAAe,CAAC,GAAG,CAAC,+BAA+B,CAAC,CAAC;;;;OAI3D,MAAM;AACL,gBAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;SACvB;KACF,CAAC,CAAC;GAEJ;CACF,CAAC,CAAC;;AAEH,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC;AACrB,WAAS,EAAE,YAAM;AACf,WAAO,MAAK,eAAe,CAAC,GAAG,EAAE,GAAG,WAAW,GAAG,EAAE,CAAC;GACtD;AACD,iBAAe,EAAE;WAAM,MAAK,eAAe,CAAC,GAAG,EAAE;GAAA;CAClD,CAAC,CAAC","file":"/client/templates/login/login.js.map","sourcesContent":["\nTemplate.login.onCreated(() => {\n  this.badFormResponse = new ReactiveVar(undefined);\n});\n    let that = this;\n\nTemplate.login.events({\n  'keydown #loginForm input': function(event) {\n    that.badFormResponse.set(undefined);\n  },\n  'submit #loginForm': function(event) {\n    event.preventDefault();\n\n    var email = event.target.email.value;\n    var password = event.target.password.value;\n    var rawFormData = event.target;\n    Meteor.loginWithPassword(email, password, (err) => {\n      if (err) {\n        that.badFormResponse.set(\"Invalid username or password.\");\n        // The user might not have been found, or their passwword\n        // could be incorrect. Inform the user that their\n        // login attempt has failed. \n      } else {\n        Router.go(\"/profile\");\n      }\n    });\n\n  }\n});\n\nTemplate.login.helpers({\n  formClass: () => {\n    return this.badFormResponse.get() ? \"has-error\" : \"\";\n  }, \n  badFormResponse: () => this.badFormResponse.get()\n});"]},"hash":"ec2732779bfebfd992725e2b049c11821f21abb4"}
