{"version":3,"sources":["meteor://ðŸ’»app/client/templates/signup/signup.js"],"names":[],"mappings":"yBAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,G","file":"/client/templates/signup/signup.js","sourcesContent":["    let that = this;\n\nTemplate.signup.events({\n  'submit form': function(event) {\n    event.preventDefault();\n    var emailVar = event.target.email.value;\n    var passwordVar = event.target.password.value;\n    var nameVar = event.target.name.value;\n    Meteor.call(\"createNewUser\", {\n      email: emailVar,\n      password: passwordVar,\n      name: nameVar\n    }, function(err) {\n      if(err) {\n        console.log(err);\n        that.badFormResponse.set(err.reason);\n      } else {\n        Router.go(\"/login\")\n      }\n    });\n  }\n});\n\n\nTemplate.signup.onCreated(() => {\n  this.badFormResponse = new ReactiveVar(undefined);\n});\nTemplate.signup.helpers({\n  formClass: () => {\n    return this.badFormResponse.get() ? \"has-error\" : \"\";\n  }, \n  badFormResponse: () => this.badFormResponse.get()\n});"]}